{"version":3,"sources":["components/ui-components/other/TransferList.js","components/forms/documents/AttachDocumentForm.js","components/order-admin/AddGlobalDocument.js","components/button-bars/OrderDocumentButtons.js","components/order-admin/OrderDocuments.js","components/ui-components/modals/StyledModal.js","components/ui-components/modals/ModalFormButtons.js","components/ui-components/buttons/DeleteButton.js","components/ui-components/buttons/NavigationButton.js"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","cardHeader","padding","boxShadow","backgroundColor","list","height","overflow","marginTop","collapse","display","flexDirection","button","not","a","b","filter","value","indexOf","intersection","TransferList","existing","options","classes","React","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","mutationApiVar","data","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","CardSelector","title","side","expanded","setExpanded","Card","style","component","Paper","CardHeader","className","avatar","Checkbox","onClick","indeterminate","disabled","inputProps","subheader","action","IconButton","Collapse","in","List","dense","role","map","labelId","ListItem","ListItemIcon","tabIndex","disableRipple","ListItemText","id","primary","Button","variant","e","event","copyItems","sort","handleSortClick","Grid","container","spacing","item","xs","elevation","direction","alignItems","size","concat","GET_UNATTACHED_GLOBAL_DOCUMENTS","gql","REMOVE_GLOBAL_DOCUMENT_FROM_ORDER","ATTACH_GLOBAL_DOCUMENT","AttachDocumentForm","props","existingGlobal","obj","global","selectedOrder","gridSelectionsVar","useQuery","variables","loading","useMutation","refetchQueries","query","GET_SINGLE_ORDERHEADER","Number","GET_ORDER_DOCUMENTS","orderId","awaitRefetchQueries","removeDocument","attachDocument","CircularProgress","documents","nodes","ModalFormButtons","label","hideModal","handleSubmit","selected","additions","removeCommon","deletions","removedFromInitial","deletionsApiObject","orderheaderId","documentId","mnPatch","then","additionsApiObject","mnOrderheaderDocument","Promise","all","AddGlobalDocument","useModal","StyledModal","orderheaderDocuments","document","showModal","NavigationButton","Item","sx","other","Box","pt","pb","mt","mb","textAlign","OrderDocumentButtons","gridTemplateColumns","DeleteButton","pdfjs","GlobalWorkerOptions","workerSrc","version","OrderDocuments","justifyContent","m","bgcolor","titleTypographyProps","color","fontSize","CardActionArea","href","headerDocumentFile","target","CardContent","file","url","pageNumber","width","DocumentDisplay","overlayClassName","isOpen","appElement","getElementById","fullWidth","type","background","borderRadius","fontWeight","textTransform","border","borderColor","cursor","startIcon"],"mappings":"ylBAuBMA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,OAAQ,QAEZC,WAAY,CACRC,QAAS,EACTC,UAAW,oBACXC,gBAAiB,oBAErBC,KAAM,CACFC,OAAQ,IACRF,gBAAiB,mBACjBG,SAAU,OACVC,UAAW,GAEfC,SAAU,CACN,8BAA+B,CAC3BC,QAAS,OACTC,cAAe,WAGvBC,OAAQ,CACJJ,UAAW,SAKvB,SAASK,EAAIC,EAAGC,GACZ,OAAOD,EAAEE,QAAO,SAACC,GAAD,OAAiC,IAAtBF,EAAEG,QAAQD,MAGzC,SAASE,EAAaL,EAAGC,GACrB,OAAOD,EAAEE,QAAO,SAACC,GAAD,OAAiC,IAAtBF,EAAEG,QAAQD,MAO1B,SAASG,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QACtCC,EAAU5B,IAChB,EAA8B6B,WAAe,IAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,WAAeF,GAAvC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BJ,WAAeH,GAAzC,mBAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAcZ,EAAaM,EAASE,GACpCK,EAAeb,EAAaM,EAASI,GAE3CL,aAAgB,WACZS,YAAe,2BAAIA,eAAL,IAAuBC,KAAMb,OAC5C,CAACA,IAEJ,IAAMc,EAAe,SAAClB,GAAD,OAAW,WAC5B,IAAMmB,EAAeX,EAAQP,QAAQD,GAC/BoB,EAAU,YAAOZ,IAED,IAAlBW,EACAC,EAAWC,KAAKrB,GAEhBoB,EAAWE,OAAOH,EAAc,GAGpCV,EAAWW,KAGTG,EAAkB,SAACC,GAAD,OAAWtB,EAAaM,EAASgB,GAAOC,QAE1DC,EAAkB,SAACF,GAAD,OAAW,WAhCvC,IAAe3B,EAAGC,EAiCNyB,EAAgBC,KAAWA,EAAMC,OACjChB,EAAWb,EAAIY,EAASgB,IAExBf,GApCGZ,EAoCcW,EApCXV,EAoCoB0B,EAnC5B,GAAN,mBAAW3B,GAAX,YAAiBD,EAAIE,EAAGD,SAqElB8B,EAAe,SAACC,EAAOJ,EAAOK,GAChC,MAAgCtB,YAAe,GAA/C,mBAAOuB,EAAP,KAAiBC,EAAjB,KAMA,OACI,eAACC,EAAA,EAAD,CACIC,MAAO,CAACxC,QAAS,OAAQC,cAAe,UACxCwC,UAAWC,IAFf,UAGI,cAACC,EAAA,EAAD,CACIC,UAAW/B,EAAQtB,WACnBsD,OACI,cAACC,EAAA,EAAD,CACIC,QAASd,EAAgBF,GACzBhB,QACIe,EAAgBC,KAAWA,EAAMC,QAA2B,IAAjBD,EAAMC,OAErDgB,cACIlB,EAAgBC,KAAWA,EAAMC,QACN,IAA3BF,EAAgBC,GAEpBkB,SAA2B,IAAjBlB,EAAMC,OAChBkB,WAAY,CAAC,aAAc,wBAGnCf,MAAOA,EACPgB,UAAS,UAAKrB,EAAgBC,GAArB,YAA+BA,EAAMC,OAArC,aACToB,OACI,cAACC,EAAA,EAAD,CACIN,QA5BM,WACtBT,GAAaD,IA4BG,gBAAeA,EACf,aAAW,YAHf,SAIKA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAI5C,eAACiB,EAAA,EAAD,CAAUC,GAAIlB,EAAUO,UAAW/B,EAAQd,SAA3C,UACI,eAACyD,EAAA,EAAD,CAAMZ,UAAW/B,EAAQlB,KAAM8D,OAAK,EAAChB,UAAU,MAAMiB,KAAK,OAA1D,UACK3B,EAAM4B,KAAI,SAACpD,GACR,IAAMqD,EAAO,iCAA6BrD,EAAM4B,MAAnC,UAEb,OACI,eAAC0B,EAAA,EAAD,CAEIH,KAAK,WACLxD,QAAM,EACN6C,QAAStB,EAAalB,GAJ1B,UAKI,cAACuD,EAAA,EAAD,UACI,cAAChB,EAAA,EAAD,CACI/B,SAAqC,IAA5BA,EAAQP,QAAQD,GACzBwD,UAAW,EACXC,eAAa,EACbd,WAAY,CAAC,kBAAmBU,OAGxC,cAACK,EAAA,EAAD,CAAcC,GAAIN,EAASO,QAAS5D,EAAM4B,UAZrC5B,EAAM2D,OAgBvB,cAACL,EAAA,EAAD,OAEJ,cAACO,EAAA,EAAD,CACIC,QAAQ,WACR7B,MAAO,CAAClD,OAAQ,IAChByD,QAAS,SAACuB,GAAD,OA5EL,SAACC,EAAOxC,EAAOK,GACnC,IAAMoC,EAAY,YAAIzC,GAAO0C,MAAK,SAACrE,EAAGC,GAAJ,OAAUD,EAAIC,EAAI,GAAK,KAC5C,UAAT+B,EACAhB,EAASoD,GAETtD,EAAQsD,GAuEoBE,CAAgBJ,EAAGvC,EAAOK,IAH9C,yBAWhB,OACI,eAACuC,EAAA,EAAD,CAAMC,WAAW,EAAMC,QAAS,EAAhC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACrC,EAAA,EAAD,CAAOsC,UAAW,EAAlB,SAAsB9C,EAAa,UAAWjB,EAAM,YAExD,cAAC0D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACK,UAAU,SAASC,WAAW,SAA9C,UACI,cAACd,EAAA,EAAD,CACIC,QAAQ,WACRc,KAAK,QACLvC,UAAW/B,EAAQX,OACnB6C,QAnHO,WACvB3B,EAASD,EAAMiE,OAAO/D,IACtBE,YAAe,2BAAIA,eAAL,IAAuBC,KAAML,EAAMiE,OAAO/D,MACxDH,EAAQf,EAAIc,EAAMI,IAClBL,EAAWb,EAAIY,EAASM,KAgHR4B,SAAiC,IAAvB5B,EAAYW,OACtB,aAAW,sBANf,eASA,cAACoC,EAAA,EAAD,CACIC,QAAQ,WACRc,KAAK,QACLvC,UAAW/B,EAAQX,OACnB6C,QArHM,WACtB7B,EAAQD,EAAKmE,OAAO9D,IACpBF,EAASjB,EAAIgB,EAAOG,IACpBC,YAAe,2BAAIA,eAAL,IAAuBC,KAAMrB,EAAIgB,EAAOG,MACtDN,EAAWb,EAAIY,EAASO,KAkHR2B,SAAkC,IAAxB3B,EAAaU,OACvB,aAAW,qBANf,eASA,cAACoC,EAAA,EAAD,CACIC,QAAQ,WACRc,KAAK,QACLvC,UAAW/B,EAAQX,OACnB6C,QAvHD,WACf3B,EAASH,GACTM,YAAe,2BAAIA,eAAL,IAAuBC,KAAMP,KAC3CC,EAAQC,IAgHI,SAKI,cAAC,IAAD,WAIZ,cAACwD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACrC,EAAA,EAAD,CAAOsC,UAAW,EAAlB,SAAsB9C,EAAa,SAAUf,EAAO,gB,8CCnO9DkE,EAAkCC,YAAH,sTAc/BC,EAAoCD,YAAH,sQASjCE,EAAyBF,YAAH,0bA2GbG,GA1FY,SAACC,GACxB,IAAMC,EAAiBD,EAAM/E,SAASL,QAAO,SAACsF,GAAD,OAASA,EAAIC,UACpDC,EAAgBC,cAAoBD,cAC1C,EAAwBE,YAASX,EAAiC,CAC9DY,UAAW,CAACtF,SAAUgF,EAAehC,KAAI,SAACmB,GAAD,OAAUA,EAAKZ,SADrD1C,EAAP,EAAOA,KAAM0E,EAAb,EAAaA,QAGb,EAAyBC,YAAYZ,EAAmC,CACpEa,eAAgB,CACZ,CACIC,MAAOC,IACPL,UAAW,CAAC/B,GAAIqC,OAAOT,EAAc5B,MAEzC,CACImC,MAAOG,GACPP,UAAW,CAACQ,QAASF,OAAOT,EAAc5B,OAGlDwC,qBAAqB,IAXlBC,EAAP,oBAaA,EAAyBR,YAAYX,EAAwB,CACzDY,eAAgB,CACZ,CACIC,MAAOC,IACPL,UAAW,CAAC/B,GAAI4B,EAAc5B,KAElC,CACImC,MAAOG,GACPP,UAAW,CAACQ,QAASX,EAAc5B,MAG3CwC,qBAAqB,IAXlBE,EAAP,oBAyDA,OAAIV,EAAgB,cAACW,EAAA,EAAD,IAGhB,qCACI,cAACnG,EAAD,CAAcC,SAAUgF,EAAgB/E,QAASY,EAAKsF,UAAUC,QAChE,cAACC,EAAA,EAAD,CACIC,MAAO,eACPC,UAAWxB,EAAMwB,UACjBC,aAnDS,WACjB,IAAMC,EAAW7F,cAAiBC,KAAKmC,KAAI,SAACmB,GAAD,OAAUA,EAAKZ,MACpDvD,EAAWgF,EAAehC,KAAI,SAACmB,GAAD,OAAUA,EAAKZ,MAC7CmD,EAAYC,YAAa3G,EAAUyG,GACnCG,EAAYC,YAAmB7G,EAAUyG,GAC/C,GAAIG,EAAUvF,OAAS,GAA0B,IAArBqF,EAAUrF,OAAc,CAChD,IAAMyF,EAAqBF,EAAU5D,KAAI,SAACmB,GAAD,MAAW,CAChD4C,cAAenB,OAAOT,EAAc5B,IACpCyD,WAAYpB,OAAOzB,OAEvB6B,EAAe,CACXV,UAAW,CAAC2B,QAASH,KACtBI,KAAKnC,EAAMwB,kBACX,GAAIG,EAAUrF,OAAS,GAA0B,IAArBuF,EAAUvF,OAAc,CACvD,IAAM8F,EAAqBT,EAAU1D,KAAI,SAACmB,GAAD,MAAW,CAChD4C,cAAe5B,EAAc5B,GAC7ByD,WAAYpB,OAAOzB,OAEvB8B,EAAe,CACXX,UAAW,CAAC8B,sBAAuBD,KACpCD,KAAKnC,EAAMwB,kBACX,GAAIG,EAAUrF,OAAS,GAAKuF,EAAUvF,OAAS,EAAG,CACrD,IAAMyF,EAAqBF,EAAU5D,KAAI,SAACmB,GAAD,MAAW,CAChD4C,cAAenB,OAAOT,EAAc5B,IACpCyD,WAAYpB,OAAOzB,OAEjBgD,EAAqBT,EAAU1D,KAAI,SAACmB,GAAD,MAAW,CAChD4C,cAAenB,OAAOT,EAAc5B,IACpCyD,WAAYpB,OAAOzB,OAGRkD,QAAQC,IAAI,CACvBrB,EAAe,CACXX,UAAW,CAAC8B,sBAAuBD,KAEvCnB,EAAe,CACXV,UAAW,CAAC2B,QAASH,OAGtBI,KAAKnC,EAAMwB,qB,oBC7FfgB,GAxBW,SAACxC,GAGvB,MAA+ByC,aAAS,kBACpC,eAACC,GAAA,EAAD,WACI,wDACA,uBACA,cAAC,GAAD,CACIlB,UAAWA,EACXvG,SAAU+E,EAAMlE,KAAK6G,qBAAqBtB,MAAMpD,KAC5C,SAACmB,GAAD,OAAUA,EAAKwD,oBAP/B,mBAAOC,EAAP,KAAkBrB,EAAlB,KAcA,OACI,8BACI,cAACsB,GAAA,EAAD,CAAkBvB,MAAO,wBAAyBlE,QAASwF,O,UCpBvE,SAASE,GAAK/C,GACZ,IAAOgD,EAAgBhD,EAAhBgD,GAAOC,EAAd,YAAuBjD,EAAvB,IACA,OACE,cAACkD,EAAA,EAAD,aACEF,GAAE,aACAG,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,UACRP,IAGDC,IAKV,I,GAaeO,GAbc,SAACxD,GAAD,OAC3B,eAACkD,EAAA,EAAD,CAAKF,GAAI,CAAC1I,QAAS,OAAQmJ,oBAAqB,iBAAkBH,GAAI,GAAtE,UACE,cAACP,GAAD,UACE,cAAC,GAAD,CAAmBjH,KAAMkE,EAAMlE,SAEjC,cAACiH,GAAD,UACE,cAACW,EAAA,EAAD,CAAcnC,MAAM,mCCb1BoC,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAEO,IAAMhD,GAAsBlB,YAAH,kVA+EjBmE,UAtBQ,WACtB,MAA0BzD,YAASQ,GAAqB,CACvDP,UAAW,CAAEQ,QAASV,cAAoBD,cAAc5B,MADjD1C,EAAR,EAAQA,KAGR,OAHA,EAAc0E,QAGM,cAACW,EAAA,EAAD,IAGnB,qCACC,cAAC,GAAD,CAAsBrF,KAAMA,IAC5B,cAACoH,EAAA,EAAD,CAAK5I,QAAQ,OAAOmJ,oBAAqB,iBAAzC,SACE3H,EAAK6G,qBAAqBtB,MAAM/E,OAAS,EACzCR,EAAK6G,qBAAqBtB,MAAMpD,KAAI,SAACmB,GAAD,OAnDjB,SAACtD,GAAD,OACvB,cAACoH,EAAA,EAAD,CACCF,GAAI,CACH1I,QAAS,OACTC,cAAe,SACfyJ,eAAgB,SAChBxE,WAAY,SACZyE,EAAG,IAGJ9E,QAAS,EATV,SAUC,eAACtC,EAAA,EAAD,CACCmG,GAAI,CACHkB,QAAS,UACThK,OAAQ,KAHV,UAKC,cAAC+C,EAAA,EAAD,CACCR,MAAOX,EAAK8G,SAASnG,MACrB0H,qBAAsB,CACrBC,MAAO,OACPC,SAAU,MAIZ,cAACC,EAAA,EAAD,CACCC,KAAI,qBAAgBzI,EAAK8G,SAAS4B,mBAAmBhG,IACrDiG,OAAO,SAFR,SAGC,cAACC,EAAA,EAAD,UACC,cAAC,IAAD,CACCC,KAAM,CACLC,IAAI,cAAD,OAAgB9I,EAAK8G,SAAS4B,mBAAmBhG,KAFtD,SAIC,cAAC,IAAD,CAAMqG,WAAY,EAAGC,MAAO,gBAvB3BhJ,EAAK8G,SAASpE,IA0C8BuG,CAAgB3F,MAE9D,qBAAKlC,UAAU,kBAAf,0E,6ECvEUwF,IAZK,SAAC1C,GACpB,OACC,cAAC,IAAD,aACC9C,UAAU,QACV8H,iBAAiB,UACjBC,QAAM,EACNC,WAAYtC,SAASuC,eAAe,SAChCnF,M,+FCNP,SAAS+C,EAAK/C,GACV,IAAOgD,EAAgBhD,EAAhBgD,GAAOC,EAAd,YAAuBjD,EAAvB,GACA,OACI,cAAC,IAAD,aACIgD,GAAE,aACEG,GAAI,EACJC,GAAI,EACJa,EAAG,GACAjB,IAEHC,IAwBD3B,IAnBU,SAAC,GAAiB,IAAhBE,EAAe,EAAfA,UACvB,OACI,eAAC,IAAD,CACItE,UAAU,gBACV8F,GAAI,CAAC1I,QAAS,OAAQmJ,oBAAqB,iBAAkBQ,EAAG,GAFpE,UAGI,cAAClB,EAAD,UACI,cAAC,IAAD,CAAQqB,MAAM,SAASgB,WAAS,EAACC,KAAK,SAAtC,sBAIJ,cAACtC,EAAD,UACI,cAAC,IAAD,CAAQqB,MAAM,SAASgB,WAAS,EAAC/H,QAASmE,EAA1C,0B,gGC3BVjI,EAAYC,YAAW,CAC3BG,KAAM,CACJ2L,WAAY,oCACZlB,MAAO,QACPmB,aAAc,EAEdC,WAAY,IACZC,cAAe,YACfC,OAAQ,YACRC,YAAa,QACb7L,QAAS,EAET,UAAW,CACTwL,WAAY,qCAEd,aAAc,CACZM,OAAQ,kBAqBClC,IAhBM,SAAC1D,GACpB,IAAM7E,EAAU5B,IAEhB,OACE,cAAC,IAAD,yBACEoF,QAAQ,YACRzB,UAAW/B,EAAQxB,KACnBkM,UAAW,cAAC,IAAD,IACXT,WAAS,GACLpF,GALN,aAOGA,EAAMuB,W,8ECjCPhI,EAAYC,YAAW,CAC3BG,KAAM,CACJ2L,WAAY,0DACZlB,MAAO,QACPmB,aAAc,EAEdC,WAAY,IACZE,OAAQ,YACRC,YAAa,QACb7L,QAAS,EACT2L,cAAe,YACf,UAAW,CACTH,WAAY,2DAEd,aAAc,CACZM,OAAQ,kBAeC9C,IAVU,SAAC9C,GACxB,IAAM7E,EAAU5B,IAEhB,OACE,cAAC,IAAD,yBAAQoF,QAAQ,YAAYzB,UAAW/B,EAAQxB,KAAMyL,WAAS,GAAKpF,GAAnE,aACGA,EAAMuB,W","file":"static/js/22.2d618324.chunk.js","sourcesContent":["/** @format */\n\nimport * as React from 'react';\nimport {createStyles, makeStyles} from '@mui/styles';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Checkbox,\n    Collapse,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport {mutationApiVar} from \"../../../cache\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            margin: 'auto',\n        },\n        cardHeader: {\n            padding: 2,\n            boxShadow: '0px 4px 80px grey',\n            backgroundColor: 'hsl(222,37%,75%)',\n        },\n        list: {\n            height: 400,\n            backgroundColor: 'hsl(222,37%,89%)',\n            overflow: 'auto',\n            marginTop: 4,\n        },\n        collapse: {\n            '& .MuiCollapse-wrapperInner': {\n                display: 'flex',\n                flexDirection: 'column',\n            },\n        },\n        button: {\n            marginTop: 10,\n        },\n    }),\n);\n\nfunction not(a, b) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n    return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n    return [...a, ...not(b, a)];\n}\n\nexport default function TransferList({existing, options}) {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([]);\n    const [left, setLeft] = React.useState(options);\n    const [right, setRight] = React.useState(existing);\n\n    const leftChecked = intersection(checked, left);\n    const rightChecked = intersection(checked, right);\n\n    React.useEffect(() => {\n        mutationApiVar({...mutationApiVar(), data: existing})\n    }, [existing])\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const numberOfChecked = (items) => intersection(checked, items).length;\n\n    const handleToggleAll = (items) => () => {\n        if (numberOfChecked(items) === items.length) {\n            setChecked(not(checked, items));\n        } else {\n            setChecked(union(checked, items));\n        }\n    };\n\n    const handleCheckedRight = () => {\n        setRight(right.concat(leftChecked));\n        mutationApiVar({...mutationApiVar(), data: right.concat(leftChecked)})\n        setLeft(not(left, leftChecked));\n        setChecked(not(checked, leftChecked));\n    };\n\n    const handleCheckedLeft = () => {\n        setLeft(left.concat(rightChecked));\n        setRight(not(right, rightChecked));\n        mutationApiVar({...mutationApiVar(), data: not(right, rightChecked)})\n        setChecked(not(checked, rightChecked));\n    };\n\n    const handleSwap = () => {\n        setRight(left);\n        mutationApiVar({...mutationApiVar(), data: left})\n        setLeft(right);\n    };\n\n    const handleSortClick = (event, items, side) => {\n        const copyItems = [...items].sort((a, b) => a > b ? 1 : -1);\n        if (side === 'right') {\n            setRight(copyItems);\n        } else {\n            setLeft(copyItems);\n        }\n    };\n\n\n    const CardSelector = (title, items, side) => {\n        const [expanded, setExpanded] = React.useState(true);\n\n        const handleExpandClick = () => {\n            setExpanded(!expanded);\n        };\n\n        return (\n            <Card\n                style={{display: 'flex', flexDirection: 'column'}}\n                component={Paper}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    avatar={\n                        <Checkbox\n                            onClick={handleToggleAll(items)}\n                            checked={\n                                numberOfChecked(items) === items.length && items.length !== 0\n                            }\n                            indeterminate={\n                                numberOfChecked(items) !== items.length &&\n                                numberOfChecked(items) !== 0\n                            }\n                            disabled={items.length === 0}\n                            inputProps={{'aria-label': 'all items selected'}}\n                        />\n                    }\n                    title={title}\n                    subheader={`${numberOfChecked(items)}/${items.length} selected`}\n                    action={\n                        <IconButton\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label='show more'>\n                            {expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>}\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} className={classes.collapse}>\n                    <List className={classes.list} dense component='div' role='list'>\n                        {items.map((value) => {\n                            const labelId = `transfer-list-all-item-${value.title}-label`;\n\n                            return (\n                                <ListItem\n                                    key={value.id}\n                                    role='listitem'\n                                    button\n                                    onClick={handleToggle(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            checked={checked.indexOf(value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{'aria-labelledby': labelId}}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={value.title}/>\n                                </ListItem>\n                            );\n                        })}\n                        <ListItem/>\n                    </List>\n                    <Button\n                        variant='outlined'\n                        style={{margin: 12}}\n                        onClick={(e) => handleSortClick(e, items, side)}>\n                        Sort\n                    </Button>\n                </Collapse>\n            </Card>\n        );\n    };\n\n    return (\n        <Grid container={true} spacing={2}>\n            <Grid item xs={5}>\n                <Paper elevation={3}>{CardSelector('Choices', left, 'left')}</Paper>\n            </Grid>\n            <Grid item xs={2}>\n                <Grid container direction='column' alignItems='center'>\n                    <Button\n                        variant='outlined'\n                        size='small'\n                        className={classes.button}\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label='move selected right'>\n                        &gt;\n                    </Button>\n                    <Button\n                        variant='outlined'\n                        size='small'\n                        className={classes.button}\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label='move selected left'>\n                        &lt;\n                    </Button>\n                    <Button\n                        variant='outlined'\n                        size='small'\n                        className={classes.button}\n                        onClick={handleSwap}>\n                        <SwapHorizIcon/>\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={5}>\n                <Paper elevation={3}>{CardSelector('Chosen', right, 'right')}</Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","/** @format */\n\nimport TransferList from '../../ui-components/other/TransferList';\nimport {gql, useMutation, useQuery} from '@apollo/client';\nimport {CircularProgress} from '@mui/material';\nimport {gridSelectionsVar, mutationApiVar} from '../../../cache';\nimport ModalFormButtons from '../../ui-components/modals/ModalFormButtons';\nimport {removeCommon, removedFromInitial,} from '../../../functions/commonFunctions';\nimport {GET_SINGLE_ORDERHEADER} from '../../order-admin/OrderStats';\nimport {GET_ORDER_DOCUMENTS} from '../../order-admin/OrderDocuments';\n\nconst GET_UNATTACHED_GLOBAL_DOCUMENTS = gql`\n    query GetUnattachedGlobalDocuments($existing: [Int!]) {\n        documents(\n            condition: { global: true }\n            filter: { id: { notIn: $existing } }\n        ) {\n            nodes {\n                id\n                title\n            }\n        }\n    }\n`;\n\nconst REMOVE_GLOBAL_DOCUMENT_FROM_ORDER = gql`\n    mutation RemoveGlobalDocumentFromOrder(\n        $mnPatch: [OrderheaderDocumentPatch!]\n    ) {\n        mnDeleteOrderheaderDocument(input: { mnPatch: $mnPatch }) {\n            deletedOrderheaderDocumentNodeId\n        }\n    }\n`;\nconst ATTACH_GLOBAL_DOCUMENT = gql`\n    mutation AttachGlobalDocument(\n        $mnOrderheaderDocument: [OrderheaderDocumentInput!]\n    ) {\n        mnCreateOrderheaderDocument(\n            input: { mnOrderheaderDocument: $mnOrderheaderDocument }\n        ) {\n            document {\n                createdAt\n                headerDocumentFile\n                global\n                id\n                title\n            }\n        }\n    }\n`;\nconst AttachDocumentForm = (props) => {\n    const existingGlobal = props.existing.filter((obj) => obj.global);\n    const selectedOrder = gridSelectionsVar().selectedOrder;\n    const {data, loading} = useQuery(GET_UNATTACHED_GLOBAL_DOCUMENTS, {\n        variables: {existing: existingGlobal.map((item) => item.id)},\n    });\n    const [removeDocument] = useMutation(REMOVE_GLOBAL_DOCUMENT_FROM_ORDER, {\n        refetchQueries: [\n            {\n                query: GET_SINGLE_ORDERHEADER,\n                variables: {id: Number(selectedOrder.id)},\n            },\n            {\n                query: GET_ORDER_DOCUMENTS,\n                variables: {orderId: Number(selectedOrder.id)},\n            },\n        ],\n        awaitRefetchQueries: true,\n    });\n    const [attachDocument] = useMutation(ATTACH_GLOBAL_DOCUMENT, {\n        refetchQueries: [\n            {\n                query: GET_SINGLE_ORDERHEADER,\n                variables: {id: selectedOrder.id},\n            },\n            {\n                query: GET_ORDER_DOCUMENTS,\n                variables: {orderId: selectedOrder.id},\n            },\n        ],\n        awaitRefetchQueries: true,\n    });\n\n    const handleSubmit = () => {\n        const selected = mutationApiVar().data.map((item) => item.id);\n        const existing = existingGlobal.map((item) => item.id);\n        const additions = removeCommon(existing, selected);\n        const deletions = removedFromInitial(existing, selected);\n        if (deletions.length > 0 && additions.length === 0) {\n            const deletionsApiObject = deletions.map((item) => ({\n                orderheaderId: Number(selectedOrder.id),\n                documentId: Number(item),\n            }));\n            removeDocument({\n                variables: {mnPatch: deletionsApiObject},\n            }).then(props.hideModal());\n        } else if (additions.length > 0 && deletions.length === 0) {\n            const additionsApiObject = additions.map((item) => ({\n                orderheaderId: selectedOrder.id,\n                documentId: Number(item),\n            }));\n            attachDocument({\n                variables: {mnOrderheaderDocument: additionsApiObject},\n            }).then(props.hideModal());\n        } else if (additions.length > 0 && deletions.length > 0) {\n            const deletionsApiObject = deletions.map((item) => ({\n                orderheaderId: Number(selectedOrder.id),\n                documentId: Number(item),\n            }));\n            const additionsApiObject = additions.map((item) => ({\n                orderheaderId: Number(selectedOrder.id),\n                documentId: Number(item)\n\n            }));\n            const result = Promise.all([\n                attachDocument({\n                    variables: {mnOrderheaderDocument: additionsApiObject},\n                }),\n                removeDocument({\n                    variables: {mnPatch: deletionsApiObject},\n                }),\n            ]);\n            result.then(props.hideModal());\n        }\n    };\n\n    if (loading) return <CircularProgress/>;\n\n    return (\n        <>\n            <TransferList existing={existingGlobal} options={data.documents.nodes}/>\n            <ModalFormButtons\n                label={'SAVE CHANGES'}\n                hideModal={props.hideModal}\n                handleSubmit={handleSubmit}\n            />\n        </>\n    );\n};\n\nexport default AttachDocumentForm;\n","import {useModal} from \"react-modal-hook\";\nimport AttachDocumentForm from \"../forms/documents/AttachDocumentForm\";\nimport NavigationButton from \"../ui-components/buttons/NavigationButton\";\nimport StyledModal from \"../ui-components/modals/StyledModal\";\n\n\nconst AddGlobalDocument = (props) => {\n\n\n    const [showModal, hideModal] = useModal(() => (\n        <StyledModal>\n            <h3>ATTACH GLOBAL DOCUMENT</h3>\n            <hr/>\n            <AttachDocumentForm\n                hideModal={hideModal}\n                existing={props.data.orderheaderDocuments.nodes.map(\n                    (item) => item.document\n                )}\n            />\n\n        </StyledModal>\n    ));\n\n    return (\n        <div>\n            <NavigationButton label={'GLOBAL DOCUMENT ADMIN'} onClick={showModal}/>\n        </div>\n    );\n};\n\nexport default AddGlobalDocument;\n","import React from 'react';\nimport Box from \"@mui/material/Box\";\nimport DeleteButton from \"../ui-components/buttons/DeleteButton\";\nimport AddGlobalDocument from \"../order-admin/AddGlobalDocument\";\n\nfunction Item(props) {\n  const {sx, ...other} = props;\n  return (\n    <Box\n      sx={{\n        pt: 1,\n        pb: 1,\n        mt: 1,\n        mb: 1,\n        textAlign: 'center',\n        ...sx,\n\n      }}\n      {...other}\n    />\n  );\n}\n\nconst OrderDocumentButtons = (props) => (\n  <Box sx={{display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mb: 2}}>\n    <Item>\n      <AddGlobalDocument data={props.data}/>\n    </Item>\n    <Item>\n      <DeleteButton label=\"REMOVE EXISTING DOCUMENT\"/>\n    </Item>\n\n  </Box>\n\n);\n\nexport default OrderDocumentButtons;","/** @format */\n\nimport { gql, useQuery } from '@apollo/client';\nimport {\n\tBox,\n\tCard,\n\tCardActionArea,\n\tCardContent,\n\tCardHeader,\n\tCircularProgress,\n} from '@mui/material';\nimport React from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf/dist/esm/entry.webpack';\nimport { gridSelectionsVar } from '../../cache';\nimport OrderDocumentButtons from '../button-bars/OrderDocumentButtons';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport const GET_ORDER_DOCUMENTS = gql`\n\tquery GetOrderDocuments($orderId: Int!) {\n\t\torderheaderDocuments(filter: { orderheaderId: { equalTo: $orderId } }) {\n\t\t\tnodes {\n\t\t\t\tdocument {\n\t\t\t\t\tcreatedAt\n\t\t\t\t\theaderDocumentFile\n\t\t\t\t\tglobal\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n`;\n\nconst DocumentDisplay = (data) => (\n\t<Box\n\t\tsx={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tm: 0.5,\n\t\t}}\n\t\tkey={data.document.id}\n\t\tspacing={2}>\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tbgcolor: '#d0ddea',\n\t\t\t\theight: 510,\n\t\t\t}}>\n\t\t\t<CardHeader\n\t\t\t\ttitle={data.document.title}\n\t\t\t\ttitleTypographyProps={{\n\t\t\t\t\tcolor: 'navy',\n\t\t\t\t\tfontSize: 18,\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<CardActionArea\n\t\t\t\thref={`/documents/${data.document.headerDocumentFile.id}`}\n\t\t\t\ttarget='_blank'>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Document\n\t\t\t\t\t\tfile={{\n\t\t\t\t\t\t\turl: `/documents/${data.document.headerDocumentFile.id}`,\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Page pageNumber={1} width={300} />\n\t\t\t\t\t</Document>\n\t\t\t\t</CardContent>\n\t\t\t</CardActionArea>\n\t\t</Card>\n\t</Box>\n);\n\nconst OrderDocuments = () => {\n\tconst { data, loading } = useQuery(GET_ORDER_DOCUMENTS, {\n\t\tvariables: { orderId: gridSelectionsVar().selectedOrder.id },\n\t});\n\tif (loading) return <CircularProgress />;\n\n\treturn (\n\t\t<>\n\t\t\t<OrderDocumentButtons data={data} />\n\t\t\t<Box display='grid' gridTemplateColumns={'repeat(6, 1fr)'}>\n\t\t\t\t{data.orderheaderDocuments.nodes.length > 0 ? (\n\t\t\t\t\tdata.orderheaderDocuments.nodes.map((item) => DocumentDisplay(item))\n\t\t\t\t) : (\n\t\t\t\t\t<div className='no-data-message'>\n\t\t\t\t\t\tNO DOCUMENTS ARE CURRENTLY ASSOCIATED WITH THIS ORDER\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default OrderDocuments;\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nconst StyledModal = (props) => {\r\n\treturn (\r\n\t\t<ReactModal\r\n\t\t\tclassName='Modal'\r\n\t\t\toverlayClassName='Overlay'\r\n\t\t\tisOpen\r\n\t\t\tappElement={document.getElementById('root')}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StyledModal;\r\n","/** @format */\n\nimport {Button} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport React from 'react';\n\nfunction Item(props) {\n    const {sx, ...other} = props;\n    return (\n        <Box\n            sx={{\n                pt: 1,\n                pb: 1,\n                m: 1,\n                ...sx,\n            }}\n            {...other}\n        />\n    );\n}\n\nconst ModalFormButtons = ({hideModal}) => {\n    return (\n        <Box\n            className='button-footer'\n            sx={{display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', m: 2}}>\n            <Item>\n                <Button color='submit' fullWidth type='submit'>\n                    submit\n                </Button>\n            </Item>\n            <Item>\n                <Button color='cancel' fullWidth onClick={hideModal}>\n                    close\n                </Button>\n            </Item>\n        </Box>\n    );\n};\n\nexport default ModalFormButtons;\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport {makeStyles} from '@mui/styles';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(#b8142d, #730d1c)',\n    color: 'white',\n    borderRadius: 0,\n\n    fontWeight: 600,\n    textTransform: 'uppercase',\n    border: '5px solid',\n    borderColor: 'white',\n    padding: 2,\n\n    '&:hover': {\n      background: 'linear-gradient(#730d1c, #b8142d)',\n    },\n    '&:disabled': {\n      cursor: 'not-allowed',\n    },\n  },\n});\n\nconst DeleteButton = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant='contained'\n      className={classes.root}\n      startIcon={<DeleteIcon />}\n      fullWidth\n      {...props}\n    >\n      {props.label}\n    </Button>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport {makeStyles} from '@mui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(hsl(209, 47%, 40%), hsl(209, 47%, 20%))',\n    color: 'white',\n    borderRadius: 0,\n\n    fontWeight: 600,\n    border: '5px solid',\n    borderColor: 'white',\n    padding: 2,\n    textTransform: 'uppercase',\n    '&:hover': {\n      background: 'linear-gradient(hsl(209, 47%, 20%), hsl(209, 47%, 40%))',\n    },\n    '&:disabled': {\n      cursor: 'not-allowed',\n    },\n  },\n});\n\nconst NavigationButton = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant='contained' className={classes.root} fullWidth {...props}>\n      {props.label}\n    </Button>\n  );\n};\n\nexport default NavigationButton;\n"],"sourceRoot":""}