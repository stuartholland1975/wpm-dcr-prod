{"version":3,"sources":["components/button-bars/OrderAdminButtons.js","gql/mutations/worksheets.js","components/button-bars/OrderItemProgressButtons.js","components/grids/cell-renderers/SimpleDateEditor.js","components/grids/cell-renderers/SimpleNumericEditor.js","components/grids/cell-renderers/SimpleSelectEditor.js","components/grids/WorkProgressGrid.js","components/order-admin/OrderItemProgress.js","components/grids/OrderWorksheetsGrid.js","components/order-admin/OrderAdmin.js","functions/commonFunctions.js","../node_modules/@mui/icons-material/Add.js","gql/queries/other.js","gql/queries/locations.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","../node_modules/@mui/icons-material/Download.js","components/order-admin/OrderStats.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"names":["OrderAdminButtons","props","history","useHistory","routeMatch","useLocation","Box","display","gridTemplateColumns","ml","mr","mb","Button","disabled","pathname","startsWith","onClick","push","state","location","color","startIcon","CREATE_BULK_WORKSHEETS","gql","Item","sx","other","pt","pb","mt","width","OrderItemProgressButtons","selectedLocation","useReactiveVar","gridSelectionsVar","justifyContent","process","fullWidth","forwardRef","ref","DateTime","now","toISODate","inputRef","useRef","useState","value","setValue","lastRowDate","currentPeriod","useEffect","data","date","weekEndingDate","current","focus","select","useImperativeHandle","getValue","type","className","onChange","e","target","toLocaleString","qtyOs","onChangeListener","useCallback","event","Number","alert","onKeyPressListener","numberOnly","nativeEvent","preventDefault","afterGuiAttached","onKeyPress","open","setOpen","handleKeyDown","key","React","document","addEventListener","removeEventListener","displayName","lastRowSupervisor","previousOption","options","filter","obj","supervisor","Select","style","height","displayEmpty","renderValue","onClose","onOpen","map","item","MenuItem","id","WorkProgressGrid","supervisors","gridOptions","columnDefs","useMemo","headerName","field","valueFormatter","formatNumberGridTwoDecimals","colId","editable","cellEditorFramework","SimpleNumericEditor","SimpleSelectEditor","cellEditorParams","params","defaults","api","getRowNode","rowIndex","SimpleDateEditor","split","reverse","join","valueGetter","qtyDone","valueOs","defaultColDef","sortable","resizable","pagination","singleClickEdit","rowData","onFirstDataRendered","startEditingCell","colKey","sizeColumnsToFit","onGridSizeChanged","reactUi","OrderItemProgress","batchRef","uuidv4","selectedOrder","gridData","setGridData","loading","useQuery","GET_INCOMPLETE_LOCATION_ITEMS","variables","onCompleted","orderdetailWithValues","nodes","GET_ALL_SUPERVISORS","supervisorsLoading","GET_CURRENT_PERIOD","fetchPolicy","periodLoading","useMutation","refetchQueries","query","GET_SINGLE_LOCATION","awaitRefetchQueries","submitWorksheets","CircularProgress","editedItems","apiObject","sitelocationId","orderheaderId","unitPayableTotal","supervisorId","periodNumberId","periods","dateComplete","qtyComplete","orderdetailId","batchId","valueComplete","Object","values","findIndex","v","includes","confirmAlert","customUI","submissionValue","formatNumberTwoDecimals","reduce","total","input","worksheets","orderId","then","GET_ORDER_WORKSHEETS","cellStyle","sort","formatDateGrid","flex","columnTypes","dateColumn","OrderWorksheetsGrid","paginationPageSize","domLayout","rowSelection","animateRows","worksheetWithValues","onGridReady","marginLeft","marginRight","marginTop","OrderLocations","lazy","OrderItems","OrderImages","OrderDocuments","OrderAdmin","m","OrderStats","fallback","path","exact","formatNumberGridNoDecimals","number","numeral","format","formatNumberNoDecimals","fromISO","toFormat","formatDate","removeCommon","first","second","el","removedFromInitial","getFirstLetters","str","word","fixKeys","fn","fromEntries","entries","k","Array","isArray","s","replace","c","toUpperCase","toLowerCase","divideIfNotZero","numerator","denominator","isNaN","renameKeys","newKeys","keyValues","keys","newKey","assign","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","GET_ITEM_TYPES","GET_RATESET_HEADERS","GET_RATESET_PRICES","GET_SUPERVISOR_VALUES_FOR_SINGLE_ORDERHEADER","GET_PERIOD_BASICS","GET_PERIODS_WITH_VALUES","GET_ORDER_LOCATIONS","GET_ORDER_LOCATIONS_WITH_IMAGES","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","ownerState","root","dense","divider","disableGutters","gutters","theme","_extends","typography","body1","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","palette","backgroundClip","backgroundColor","action","hover","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","opacity","disabledOpacity","dividerClasses","spacing","marginBottom","inset","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","inProps","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","children","clsx","GET_SINGLE_ORDERHEADER","border","flexGrow","bgcolor","p","textAlign","borderRadius","flexWrap","fontWeight","orderheaderWithValue","projectTitle","substring","orderNumber","statusDescription","area","orderValueLabour","orderValueMaterials","orderValueOther","orderValueTotal","orderValueTotalComplete","orderValueTotalApplied","orderValueTotalBoq","orderValueTotalVarn","locationCount","locationsComplete","itemCount","itemsComplete","documentCount","imageCount","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","toString","substr","stringify","arr","offset","arguments","length","TypeError","v4","buf","rnds","random"],"mappings":"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","file":"static/js/23.25ae7a5d.chunk.js","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport {Box} from '@mui/material';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport Button from \"@mui/material/Button\";\n\nconst OrderAdminButtons = (props) => {\n    const history = useHistory();\n    let routeMatch = useLocation();\n\n    return (\n        <Box display={\"grid\"} gridTemplateColumns=\"auto auto auto auto auto auto\" ml={0.5} mr={0.5} mb={2}>\n            <Button\n                disabled={routeMatch.pathname.startsWith('/projects/admin/locations')}\n                onClick={() =>\n                    history.push({\n                        pathname: '/projects/admin/locations',\n                        state: history.location.state,\n                    })\n                }\n                color='navigation'\n            >\n                locations\n            </Button>\n            <Button\n                disabled={routeMatch.pathname.startsWith('/projects/admin/items')}\n                onClick={() =>\n                    history.push({\n                        pathname: `/projects/admin/items`,\n                        state: history.location.state,\n                    })\n                }\n                color='navigation'\n            >\n                items\n            </Button>\n            <Button\n                disabled={routeMatch.pathname.startsWith('/projects/admin/worksheets')}\n                onClick={() =>\n                    history.push({\n                        pathname: `/projects/admin/worksheets`,\n                        state: history.location.state,\n                    })\n                }\n                color='navigation'\n            >\n                worksheets\n            </Button>\n            <Button\n                disabled={routeMatch.pathname.startsWith('/projects/admin/documents')}\n                onClick={() =>\n                    history.push({\n                        pathname: `/projects/admin/documents`,\n                        state: history.location.state,\n                    })\n                }\n                color='navigation'\n            >\n                documents\n            </Button>\n            <Button\n                disabled={routeMatch.pathname.startsWith('/projects/admin/images')}\n                onClick={() =>\n                    history.push({\n                        pathname: `/projects/admin/images`,\n                        state: history.location.state,\n                    })\n                }\n                color='navigation'\n            >\n                view images\n            </Button>\n            <Button\n                onClick={() =>\n                    history.push({\n                        pathname: `/projects/admin/images`,\n                        state: history.location.state,\n                    })\n                }\n                color='action'\n                startIcon={<DownloadIcon/>}\n            >\n                Download Workbook\n            </Button>\n        </Box>\n    );\n};\n\nexport default OrderAdminButtons;","import { gql } from '@apollo/client'\n\nexport const CREATE_BULK_WORKSHEETS = gql`\n\tmutation CreateBulkWorksheets(\n\t\t$input: WorksheetCreateBulkWorksheetsInput!\n\t\t$orderId: Int!\n\t) {\n\t\tworksheetCreateBulkWorksheets(input: $input) {\n\t\t\tquery {\n\t\t\t\torderheaderWithValueById(id: $orderId) {\n\t\t\t\t\tarea\n\t\t\t\t\taverageItemValue\n\t\t\t\t\taverageLocationValue\n\t\t\t\t\tid\n\t\t\t\t\titemCount\n\t\t\t\t\titemCountBoq\n\t\t\t\t\titemCountVarn\n\t\t\t\t\titemsComplete\n\t\t\t\t\titemsCompleteBoq\n\t\t\t\t\titemsCompleteVarn\n\t\t\t\t\tlocationCount\n\t\t\t\t\tlocationsComplete\n\t\t\t\t\tstatusDescription\n\t\t\t\t\torderNumber\n\t\t\t\t\torderValueLabour\n\t\t\t\t\torderValueMaterials\n\t\t\t\t\torderValueOther\n\t\t\t\t\torderValueTotal\n\t\t\t\t\torderValueTotalApplied\n\t\t\t\t\torderValueTotalBoq\n\t\t\t\t\torderValueTotalComplete\n\t\t\t\t\torderValueTotalVarn\n\t\t\t\t\tprojectTitle\n\t\t\t\t\tworkType\n\t\t\t\t\tissuedDate\n\t\t\t\t\tdocumentCount\n\t\t\t\t\timageCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport {gridSelectionsVar} from '../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport {Button} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add'\n\n\nfunction Item(props) {\n    const {sx, ...other} = props;\n    return (\n        <Box\n            sx={{\n                pt: 1,\n                pb: 1,\n                mt: 1,\n                mb: 1,\n                width: 800,\n                ...sx,\n            }}\n            {...other}\n        />\n    );\n}\n\nconst OrderItemProgressButtons = (props) => {\n    const selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\n    return (\n        <Box sx={{display: 'flex', mb: 2, justifyContent: 'flex-start'}}>\n            <Item>\n                <Button\n                    onClick={() => props.process(selectedLocation)}\n                    color='create'\n                    fullWidth\n                    startIcon={<AddIcon/>}\n                >\n                    save changes\n                </Button>\n\n            </Item>\n            <Item>\n                {/*  <CancelButton\n          label='reset data'\n          onClick={() => props.process(selectedLocation)}\n        /> */}\n            </Item>\n        </Box>\n    );\n};\n\nexport default OrderItemProgressButtons;\n","import {forwardRef, useEffect, useImperativeHandle, useRef, useState} from \"react\";\nimport {DateTime} from \"luxon\";\n\nexport default forwardRef((props, ref) => {\n  DateTime.now().toISODate();\n  const inputRef = useRef();\n  const [value, setValue] = useState('');\n\n  const {lastRowDate, currentPeriod} = props\n\n  useEffect(() => {\n    if (lastRowDate) {\n      setValue(lastRowDate.data.date)\n    }\n    else setValue(currentPeriod.weekEndingDate)\n    inputRef.current.focus();\n    inputRef.current.select();\n  }, [lastRowDate, currentPeriod])\n\n  function inputHandler(e) {\n    setValue(e.target.value.toLocaleString());\n  }\n\n  useImperativeHandle(ref, () => {\n      return {\n        getValue: () => {\n          return value;\n        },\n      }\n    }\n  )\n  ;\n\n  return (\n    <input\n      type=\"date\"\n      className=\"ag-input-field-input ag-text-field-input\"\n      ref={inputRef}\n      onChange={inputHandler}\n      value={value}\n\n    />\n  )\n})","import {forwardRef, useCallback, useImperativeHandle, useRef, useState} from 'react';\nimport {numberOnly} from \"../../../functions/commonFunctions\";\n\nexport default forwardRef((props, ref) => {\n  const inputRef = useRef();\n  const { qtyOs } = props.data\n  const [value, setValue] = useState(qtyOs)\n\n\n  const onChangeListener = useCallback(event => {\n    if (Number(event.target.value) > Number(qtyOs)) {\n      alert('Qty Done Cannot Exceed Qty Outstanding');\n      setValue(value);\n    }\n    else {\n      setValue(event.target.value);\n    }\n  }, [value, qtyOs]);\n\n\n  const onKeyPressListener = useCallback(event => {\n    if (!numberOnly(event.nativeEvent)) {\n      event.preventDefault();\n    }\n  }, []);\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      getValue() {\n        return value;\n      },\n      afterGuiAttached: () => {\n        inputRef.current.focus();\n        inputRef.current.select();\n      }\n    };\n  });\n\n  return (\n    <input\n      className='ag-input-field-input ag-text-field-input'\n      ref={inputRef}\n      onChange={onChangeListener}\n      value={value}\n      onKeyPress={onKeyPressListener}\n    />\n  );\n});\n","import React, {forwardRef, useImperativeHandle, useRef, useState,} from 'react';\nimport {MenuItem, Select} from '@mui/material';\n\n\nexport default forwardRef((props, ref) => {\n    const [value, setValue] = useState('');\n    const [open, setOpen] = useState(false);\n    const inputRef = useRef();\n\n    React.useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n    function handleKeyDown(e) {\n        e.key === \"ArrowDown\" && setOpen(true);\n    }\n\n    function onChangeHandler(e, value) {\n        setValue(e.target.value);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n        // setValue()\n    };\n\n\n    useImperativeHandle(ref, () => {\n\n        return {\n            getValue: () => {\n                return value.displayName;\n            },\n\n            afterGuiAttached: () => {\n                //  setOpen(true);\n                if (props.lastRowSupervisor) {\n                    const previousOption = props.options.filter(obj => obj.displayName === props.lastRowSupervisor.data.supervisor)[0]\n                    setValue(previousOption)\n                } else setValue(props.options[0])\n            },\n        };\n    });\n\n    return (\n        <Select\n            value={value}\n            onChange={onChangeHandler}\n            ref={inputRef}\n            fullWidth\n            open={open}\n            style={{height: 30}}\n            displayEmpty={true}\n            renderValue={() => value.displayName}\n            onClose={handleClose}\n            onOpen={handleOpen}>\n            {props.options.map((item) => (\n                <MenuItem key={item.id} value={item}>\n                    {item.displayName}\n                </MenuItem>\n            ))}\n        </Select>\n    );\n});\n","import React from 'react';\nimport {AgGridReact} from 'ag-grid-react';\nimport {formatNumberGridTwoDecimals} from '../../functions/commonFunctions';\nimport SimpleDateEditor from './cell-renderers/SimpleDateEditor';\nimport SimpleNumericEditor from \"./cell-renderers/SimpleNumericEditor\";\nimport SimpleSelectEditor from './cell-renderers/SimpleSelectEditor'\n\n\nconst WorkProgressGrid = ({data, supervisors, currentPeriod}) => {\n    /** @namespace params.data.valueOs **/\n    /** @namespace params.data.qtyOs **/\n\n\n    const columnDefs = React.useMemo(() => [\n        {headerName: 'Item Ref', field: 'itemNumber'},\n        {headerName: 'Item Type', field: 'typeShort'},\n        {\n            headerName: 'Activity Code',\n            field: 'activityCode',\n        },\n        {\n            headerName: 'Activity Description',\n            field: 'activityDescription',\n        },\n        {\n            headerName: 'Qty Ordered',\n            field: 'qtyOrdered',\n            type: 'numericColumn',\n            valueFormatter: formatNumberGridTwoDecimals,\n        },\n        {\n            headerName: 'Qty Os',\n            field: 'qtyOs',\n            valueFormatter: formatNumberGridTwoDecimals,\n            type: 'numericColumn',\n        },\n        {\n            headerName: 'Value Os',\n            field: 'valueOs',\n            valueFormatter: formatNumberGridTwoDecimals,\n            type: 'numericColumn',\n        },\n        {\n            headerName: 'Qty Done',\n            colId: 'qtyDone',\n            field: 'qtyDone',\n            type: 'numericColumn',\n            editable: true,\n            cellEditorFramework: SimpleNumericEditor,\n            valueFormatter: formatNumberGridTwoDecimals,\n        },\n        {\n            headerName: 'Supervisor',\n            colId: 'supervisor',\n            field: 'supervisor',\n            editable: true,\n            cellEditorFramework: SimpleSelectEditor,\n            width: 150,\n            cellEditorParams: (params) => ({\n                options: supervisors,\n                defaults: data,\n                lastRowSupervisor: params.api.getRowNode(params.rowIndex - 1),\n            }),\n        },\n        {\n            headerName: 'Date Complete',\n            field: 'date',\n            editable: true,\n            cellEditorFramework: SimpleDateEditor,\n            cellEditorParams: (params) => ({\n                lastRowDate: params.api.getRowNode(params.rowIndex - 1),\n                currentPeriod: currentPeriod,\n            }),\n            valueFormatter: (params) =>\n                params.value && params.value.split('-').reverse().join('/')\n        },\n        {\n            headerName: 'Value Complete',\n            valueGetter: (params) => (params.data.qtyDone) * (params.data.valueOs) / (params.data.qtyOs),\n            valueFormatter: formatNumberGridTwoDecimals,\n            type: 'numericColumn',\n        },\n    ], [currentPeriod, data, supervisors])\n\n    const defaultColDef = {\n        filter: false,\n        sortable: false,\n        resizable: true,\n    };\n\n    const gridOptions = {\n        columnDefs: columnDefs,\n        defaultColDef: defaultColDef,\n        pagination: false,\n        singleClickEdit: true,\n    };\n\n    const onDataRendered = (params) => {\n        params.api.startEditingCell({\n            rowIndex: 0,\n            colKey: 'qtyDone',\n        });\n        params.api.sizeColumnsToFit();\n    };\n\n    return (\n        <>\n            <div className='ag-theme-custom-react' style={{height: 850}}>\n                <AgGridReact\n                    gridOptions={gridOptions}\n                    rowData={data}\n                    onFirstDataRendered={onDataRendered}\n                    onGridSizeChanged={(params) => params.api.sizeColumnsToFit()}\n                    reactUi={false}\n                    //  getRowNodeId={data => data.id}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default WorkProgressGrid;\n","/** @format */\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { CircularProgress } from '@mui/material';\nimport React from 'react';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { gridSelectionsVar } from '../../cache';\nimport { formatNumberTwoDecimals } from '../../functions/commonFunctions';\nimport { CREATE_BULK_WORKSHEETS } from '../../gql/mutations/worksheets';\nimport {\n\tGET_INCOMPLETE_LOCATION_ITEMS,\n\tGET_SINGLE_LOCATION,\n} from '../../gql/queries/locations';\nimport {\n\tGET_ALL_SUPERVISORS,\n\tGET_CURRENT_PERIOD,\n} from '../../gql/queries/other';\nimport OrderItemProgressButtons from '../button-bars/OrderItemProgressButtons';\nimport WorkProgressGrid from '../grids/WorkProgressGrid';\n\nconst OrderItemProgress = () => {\n\t/** @namespace data.orderdetailWithValues **/\n\t/** @namespace currentPeriod.periods **/\n\n\tconst history = useHistory();\n\n\tconst batchRef = React.useRef(uuidv4());\n\n\tconst selectedLocation = gridSelectionsVar().selectedLocation;\n\tconst selectedOrder = gridSelectionsVar().selectedOrder;\n\n\tconst [gridData, setGridData] = React.useState([]);\n\n\tconst { loading } = useQuery(GET_INCOMPLETE_LOCATION_ITEMS, {\n\t\tvariables: { id: Number(selectedLocation.id) },\n\n\t\tonCompleted: (data) =>\n\t\t\tsetGridData(\n\t\t\t\tdata.orderdetailWithValues.nodes.map((item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tqtyDone: 0.0,\n\t\t\t\t})),\n\t\t\t),\n\t});\n\n\tconst { data: supervisors, loading: supervisorsLoading } =\n\t\tuseQuery(GET_ALL_SUPERVISORS);\n\n\tconst { data: currentPeriod, loading: periodLoading } = useQuery(\n\t\tGET_CURRENT_PERIOD,\n\t\t{\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t},\n\t);\n\n\tconst [submitWorksheets] = useMutation(CREATE_BULK_WORKSHEETS, {\n\t\trefetchQueries: [\n\t\t\t{\n\t\t\t\tquery: GET_SINGLE_LOCATION,\n\t\t\t\tvariables: { id: selectedLocation.id },\n\t\t\t},\n\t\t],\n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => {\n\t\t\thistory.push({\n\t\t\t\tpathname: `/projects/admin/locations`,\n\t\t\t\tstate: selectedOrder.id,\n\t\t\t});\n\t\t},\n\t});\n\n\tconst processData = () => {\n\t\tconst editedItems = gridData.filter((obj) => obj.qtyDone > 0);\n\t\tconst apiObject = editedItems.map(\n\t\t\t({\n\t\t\t\tdate,\n\t\t\t\tid,\n\t\t\t\tqtyDone,\n\t\t\t\tsupervisor,\n\t\t\t\tsitelocationId,\n\t\t\t\torderheaderId,\n\t\t\t\tunitPayableTotal,\n\t\t\t}) => ({\n\t\t\t\tsupervisorId: supervisors.supervisors.nodes\n\t\t\t\t\t.filter((obj) => obj.displayName === supervisor)\n\t\t\t\t\t.map((item) => item.id)[0],\n\t\t\t\tperiodNumberId: currentPeriod.periods.nodes[0].id,\n\t\t\t\tdateComplete: date,\n\t\t\t\tqtyComplete: qtyDone,\n\t\t\t\torderdetailId: id,\n\t\t\t\tbatchId: batchRef.current,\n\t\t\t\torderheaderId,\n\t\t\t\tsitelocationId,\n\t\t\t\tvalueComplete: qtyDone * Number(unitPayableTotal),\n\t\t\t}),\n\t\t);\n\t\tconst errorCheck = apiObject\n\t\t\t.map(\n\t\t\t\t(item) =>\n\t\t\t\t\t-1 !== Object.values(item).findIndex((v) => v == null || v === ''),\n\t\t\t)\n\t\t\t.includes(true);\n\t\tif (errorCheck) {\n\t\t\tconfirmAlert({\n\t\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='custom-ui'>\n\t\t\t\t\t\t\t<h1>Submission Contains Errors!</h1>\n\t\t\t\t\t\t\t<p>Please Correct Them And Try Again</p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tconst submissionValue = formatNumberTwoDecimals(\n\t\t\t\teditedItems\n\t\t\t\t\t.map((item) => (item.valueOs / item.qtyOs) * item.qtyDone)\n\t\t\t\t\t.reduce((item, total) => item + total, 0),\n\t\t\t);\n\t\t\tconfirmAlert({\n\t\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='custom-ui'>\n\t\t\t\t\t\t\t<h1>Confirm Submission</h1>\n\t\t\t\t\t\t\t<p>{`Submission Value Is: ${submissionValue}`}</p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tsubmitWorksheets({\n\t\t\t\t\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\t\t\t\t\tinput: { worksheets: apiObject },\n\t\t\t\t\t\t\t\t\t\t\torderId: selectedOrder.id,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}).then(() => onClose())\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n\tif (loading || supervisorsLoading || periodLoading)\n\t\treturn <CircularProgress />;\n\n\treturn (\n\t\t<div>\n\t\t\t<OrderItemProgressButtons process={processData} />\n\t\t\t<WorkProgressGrid\n\t\t\t\tdata={gridData}\n\t\t\t\tsupervisors={supervisors.supervisors.nodes}\n\t\t\t\tcurrentPeriod={currentPeriod.periods.nodes[0]}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default OrderItemProgress;\n","/** @format */\n\nimport React from 'react';\nimport {AgGridReact} from 'ag-grid-react';\nimport {formatDateGrid, formatNumberGridTwoDecimals,} from '../../functions/commonFunctions';\nimport {gql, useQuery, useReactiveVar} from '@apollo/client';\nimport {gridSelectionsVar} from '../../cache';\nimport {CircularProgress} from '@mui/material';\n\nconst GET_ORDER_WORKSHEETS = gql`\n    query GetOrderWorksheets($id: Int!) {\n        worksheetWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n            nodes {\n                activityCode\n                activityDescription\n                applied\n                dateComplete\n                id\n                itemNumber\n                locationReference\n                worksheetReference\n                week\n                year\n                periodNumber\n                qtyComplete\n                supervisorName\n                valueComplete\n                batchId\n                applicationNumber\n            }\n        }\n    }\n`;\n\nconst columnDefs = [\n    {\n        headerName: 'Worksheet Ref',\n        field: 'worksheetReference',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Batch Ref',\n        field: 'batchId',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Location',\n        field: 'locationReference',\n        cellStyle: {'text-align': 'left'},\n        //minWidth: 250,\n    },\n    {\n        headerName: 'Item Number',\n        field: 'itemNumber',\n        cellStyle: {'text-align': 'left'},\n        sort: 'asc',\n    },\n    {\n        headerName: 'Activity Code',\n        field: 'activityCode',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Activity Description',\n        field: 'activityDescription',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Work Done Date',\n        field: 'dateComplete',\n        type: 'dateColumn',\n        valueFormatter: formatDateGrid,\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Year',\n        field: 'year',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Week Number',\n        field: 'week',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Supervisor Name',\n        field: 'supervisorName',\n        cellStyle: {'text-align': 'left'},\n    },\n    {\n        headerName: 'Qty Complete',\n        field: 'qtyComplete',\n        type: 'numericColumn',\n        valueFormatter: formatNumberGridTwoDecimals,\n    },\n    {\n        headerName: 'Value Complete',\n        field: 'valueComplete',\n        type: 'numericColumn',\n        valueFormatter: formatNumberGridTwoDecimals,\n    },\n    {\n        headerName: 'Applied',\n        field: 'applied',\n        type: 'rightAligned',\n        valueFormatter: function (params) {\n            return params.value ? 'Yes' : 'No';\n        },\n    },\n    {\n        headerName: 'App Number',\n        field: 'applicationNumber',\n        type: 'numericColumn',\n    },\n    {\n        headerName: 'Reporting Period',\n        field: 'periodNumber',\n        type: 'numericColumn',\n    },\n];\n\nconst defaultColDef = {\n    filter: true,\n    sortable: true,\n    resizable: true,\n    flex: true,\n};\n\nconst columnTypes = {\n    dateColumn: {\n        filter: 'agDateColumnFilter',\n    },\n};\nconst OrderWorksheetsGrid = () => {\n    const selectedOrder = useReactiveVar(gridSelectionsVar).selectedOrder;\n    const {loading, data} = useQuery(GET_ORDER_WORKSHEETS, {\n        variables: {id: selectedOrder.id},\n    });\n\n    const gridOptions = {\n        columnDefs: columnDefs,\n        defaultColDef: defaultColDef,\n        columnTypes: columnTypes,\n        pagination: true,\n        paginationPageSize: 30,\n        domLayout: 'autoHeight',\n        rowSelection: 'single',\n        animateRows: true,\n        rowData: data?.worksheetWithValues.nodes,\n        onGridReady: (params) => {\n            params.api.sizeColumnsToFit();\n        },\n        onGridSizeChanged: (params) => params.api.sizeColumnsToFit(),\n    };\n    if (loading) {\n        return <CircularProgress/>;\n    }\n\n    return (\n        <div style={{marginLeft: 5, marginRight: 5, marginTop: 25}}>\n            <AgGridReact\n                gridOptions={gridOptions}\n                reactUi={false}\n                className='ag-theme-custom-react'\n            />\n        </div>\n    );\n};\n\nexport default OrderWorksheetsGrid;\n","/** @format */\n\nimport React, {lazy, Suspense} from 'react';\nimport OrderAdminButtons from '../button-bars/OrderAdminButtons';\nimport OrderStats from './OrderStats';\nimport {Route, Switch} from 'react-router-dom';\nimport {Box, CircularProgress} from '@mui/material';\nimport OrderItemProgress from './OrderItemProgress';\nimport OrderWorksheetsGrid from '../grids/OrderWorksheetsGrid';\n\nconst OrderLocations = lazy(() => import('./OrderLocations'));\nconst OrderItems = lazy(() => import('./OrderItems'));\nconst OrderImages = lazy(() => import('./OrderImages'));\nconst OrderDocuments = lazy(() => import('./OrderDocuments'));\n\nconst OrderAdmin = () => {\n    return (\n        <Box m={2}>\n            <br/>\n            <OrderAdminButtons/>\n            <OrderStats/>\n            <hr/>\n            <Suspense fallback={<CircularProgress/>}>\n                <Switch>\n                    <Route path='/projects/admin/locations' exact>\n                        <OrderLocations/>\n                    </Route>\n                    <Route path='/projects/admin/progress/' exact>\n                        <OrderItemProgress/>\n                    </Route>\n                    <Route path='/projects/admin/items' exact>\n                        <OrderItems/>\n                    </Route>\n                    <Route path='/projects/admin/images' exact>\n                        <OrderImages/>\n                    </Route>\n                    <Route path='/projects/admin/documents' exact>\n                        <OrderDocuments/>\n                    </Route>\n                    <Route path='/projects/admin/worksheets' exact>\n                        <OrderWorksheetsGrid/>\n                    </Route>\n                </Switch>\n            </Suspense>\n        </Box>\n    );\n};\nexport default OrderAdmin;\n","/** @format */\n\nimport {DateTime} from 'luxon';\nimport numeral from 'numeral';\n\nexport const formatNumberGridNoDecimals = (number) =>\n    numeral(number.value).format('0,0');\nexport const formatNumberGridTwoDecimals = (number) =>\n    numeral(number.value).format('0,0.00');\n\nexport const formatNumberNoDecimals = (number) => numeral(number).format('0,0');\nexport const formatNumberTwoDecimals = (number) =>\n    numeral(number).format('0,0.00');\n\nexport const formatDateGrid = (date) =>\n    DateTime.fromISO(date.value).toFormat('dd/LL/y');\nexport const formatDate = (date) => DateTime.fromISO(date).toFormat('dd/LL/y');\nexport const formatExifDate = (date) =>\n    DateTime.fromFormat(date.slice(0, 10).replace(/:/g, '/'), 'y/LL/dd').toFormat(\n        'dd/LL/y',\n    );\n\nexport const formatDateGridText = (date) =>\n    DateTime.fromISO(date.value).toLocaleString();\nexport const formatDateText = (date) => DateTime(date).toFormat('dd/LL/y');\n\nexport const convertDateToLocal = date => DateTime.fromISO(date.slice(0, 10)).toFormat('dd/LL/y')\n\n\nexport const parseDateGrid = (date) =>\n    DateTime.fromISO(date.value).toLocaleString();\n\nexport const removeCommon = (first, second) => {\n    const spread = [...first, ...second];\n    return spread.filter((el) => {\n        return !first.includes(el) && second.includes(el);\n    });\n};\n\nexport const removedFromInitial = (first, second) => {\n    const spread = [...first, ...second];\n    return spread.filter((el) => {\n        return first.includes(el) && !second.includes(el);\n    });\n};\n\nexport const numberOnly = (event) => {\n    return (\n        event.key === '1' ||\n        event.key === '2' ||\n        event.key === '3' ||\n        event.key === '4' ||\n        event.key === '5' ||\n        event.key === '6' ||\n        event.key === '7' ||\n        event.key === '8' ||\n        event.key === '9' ||\n        event.key === '0' ||\n        event.key === '.'\n    );\n};\n\nexport const setDelay = (ms) => new Promise((res) => setTimeout(res, ms));\n\nexport const textTruncate = (str, length, ending) => {\n    if (length == null) {\n        length = 100;\n    }\n    if (ending == null) {\n        ending = '...';\n    }\n    if (str.length > length) {\n        return str.substring(0, length - ending.length) + ending;\n    } else {\n        return str;\n    }\n};\n\nexport const getFirstLetters = (str) => {\n    return str\n        .split(' ')\n        .map((word) => word[0])\n        .join('');\n};\n\nexport const fixKeys = (fn) => (obj) =>\n    Object.fromEntries(\n        Object.entries(obj).map(([k, v]) => [\n            fn(k),\n            Array.isArray(v)\n                ? v.map(fixKeys(fn))\n                : typeof v == 'object'\n                    ? fixKeys(fn)(v)\n                    : v,\n        ]),\n    );\n\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nexport const camelCase = (s) => s.replace(/_(.)/g, (s, c) => c.toUpperCase());\n\nexport const snakeCase = (s) => s.replace(/_(.)/g, (s, c) => c.toLowerCase());\n\nexport const camelizeKeys = fixKeys(camelCase);\n\nexport const SnakeCaseToWords = fixKeys(snakeCase)\n\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n\n/**\n * \"Safer\" String.toUpperCase()\n */\nexport function upperCase(str) {\n    return str.toUpperCase();\n}\n\n\nexport function properCase(str) {\n    return str.split(' ').map((word) => {\n        return word[0].toUpperCase() + word.substring(1);\n    }).join(\" \");\n}\n\n//const words = mySentence.split(\" \");\n\n//words.map((word) => {\n//\treturn word[0].toUpperCase() + word.substring(1);\n//}).join(\" \");\n\nexport const formatNumberForExcel = (num) => {\n    const m = Number((Math.abs(num) * 100).toPrecision(15));\n    return Math.round(m) / 100 * Math.sign(num);\n}\n\nexport function divideIfNotZero(numerator, denominator) {\n    if (denominator === 0 || isNaN(denominator)) {\n        return null;\n    } else {\n        return numerator / denominator;\n    }\n}\n\nexport function renameKeys(obj, newKeys) {\n    const keyValues = Object.keys(obj).map(key => {\n        const newKey = newKeys[key] || key;\n        return {[newKey]: obj[key]};\n    });\n    return Object.assign({}, ...keyValues);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","/** @format */\n\nimport {gql} from '@apollo/client';\n\nexport const GET_ALL_SUPERVISORS = gql`\n    query GetAllSupervisors {\n        supervisors {\n            nodes {\n                displayName\n                id\n            }\n        }\n    }\n`;\n\nexport const GET_CURRENT_PERIOD = gql`\n    query GetCurrentPeriod {\n        periods(condition: { current: true }) {\n            nodes {\n                current\n                id\n                periodNumber\n                week\n                weekCommencingDate\n                weekEndingDate\n                year\n            }\n        }\n    }\n`;\n\nexport const GET_ALL_AREAS = gql`\n    query getAreas {\n        areas {\n            nodes {\n                id\n                description\n            }\n        }\n    }\n`;\n\nexport const GET_ALL_WORKTYPES = gql`\n    query getWorktypes {\n        worktypes {\n            nodes {\n                id\n                description\n            }\n        }\n    }\n`;\n\nexport const GET_ALL_ORDERHEADER_STATUSES = gql`\n    query getOrderheaderStatus {\n        orderheaderStatuses {\n            nodes {\n                id\n                statusDescription\n            }\n        }\n    }\n`;\n\nexport const GET_ORDER_LOCATIONS = gql`\n    query GetOrderLocations($id: Int!) {\n        sitelocationWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n            nodes {\n                complete\n                id\n                itemCount\n                itemsComplete\n                orderValue\n                orderheaderId\n                reference\n                valueApplied\n                valueComplete\n                worksheetReference\n                imageCount\n            }\n            totalCount\n        }\n    }\n`;\n\nexport const GET_ITEM_TYPES = gql`\n    query GetItemTypes {\n        itemTypes {\n            nodes {\n                id\n                typeLong\n                typeShort\n            }\n        }\n    }\n`;\n\nexport const GET_RATESET_HEADERS = gql`\n    query GetRatesetHeaders {\n        ratesetHeaders {\n            nodes {\n                id\n                description\n            }\n        }\n    }\n`;\nexport const GET_RATESET_PRICES = gql`\n    query GetRatesetPrices($id: Int!) {\n        pricesWithUplifts(\n            condition: { ratesetHeaderId: $id }\n            orderBy: ACTIVITY_CODE_ASC\n        ) {\n            nodes {\n                activityCode\n                activityDescription\n                id\n                ratesetHeaderId\n            }\n            totalCount\n        }\n    }\n`;\n\nexport const GET_SUPERVISOR_VALUES_FOR_SINGLE_ORDERHEADER = gql`\n    query GetSupervisorValuesForSingleOrderheader($id: Int!) {\n        orderheader(id: $id) {\n            supervisorsByWorksheetOrderheaderIdAndSupervisorId {\n                nodes {\n                    displayName\n                    fullName\n                    worksheets(condition: { orderheaderId: $id }) {\n                        groupedAggregates(groupBy: SUPERVISOR_ID) {\n                            sum {\n                                valueComplete\n                            }\n                        }\n                    }\n                }\n            }\n            projectTitle\n        }\n    }\n`;\n\nexport const GET_PERIOD_BASICS = gql`\n    query GetPeriodBasics {\n        periodWithValues(filter: { worksValueCurrent: { greaterThan: \"0\" } }) {\n            nodes {\n                id\n                periodNumber\n            }\n        }\n    }\n`;\n\nexport const GET_PERIODS_WITH_VALUES = gql`\n    query GetPeriodsWithValues($id: Int!) {\n        period(id: $id) {\n            periodValuesByAreas {\n                nodes {\n                    areaDescription\n                    areaId\n                    periodId\n                    periodNumber\n                    thisPeriodValue\n                    itemCount\n                    locationCount\n                    orderCount\n                    cumulativeValue\n                    prevCumulativeValue\n                }\n            }\n            worksValue\n            periodValuesByOrderheaders(orderBy: AREA_ID_ASC) {\n                nodes {\n                    areaDescription\n                    areaId\n                    orderId\n                    orderNumber\n                    projectTitle\n                    periodNumber\n                    periodId\n                    valueComplete\n                    worktypeDescription\n                    worktypeId\n                    orderCount\n                    itemCount\n                    locationCount\n                }\n            }\n            periodValuesBySupervisors(orderBy: VALUE_COMPLETE_DESC) {\n                nodes {\n                    periodId\n                    periodNumber\n                    supervisorId\n                    supervisorName\n                    displayName\n                    valueComplete\n                    itemCount\n                    locationCount\n                    orderCount\n                }\n            }\n            periodValuesByActivities {\n                nodes {\n                    activityCode\n                    activityDescription\n                    periodId\n                    periodNumber\n                    valueComplete\n                }\n            }\n            periodWithValueById {\n                closed\n                current\n                id\n                periodNumber\n                week\n                weekCommencingDate\n                weekEndingDate\n                worksValueClosed\n                worksValueCurrent\n                year\n                orderCount\n                itemCount\n                locationCount\n                areaCount\n            }\n        }\n    }\n`;","import {gql} from '@apollo/client'\n\nexport const GET_INCOMPLETE_LOCATION_ITEMS = gql`\n    query GetIncompleteLocationItems($id: Int!) {\n        orderdetailWithValues(\n            filter: { complete: { equalTo: false }, sitelocationId: { equalTo: $id } }\n        ) {\n            nodes {\n                activityCode\n                activityDescription\n                itemNumber\n                typeShort\n                valueOs\n                qtyOs\n                qtyOrdered\n                id\n                orderheaderId\n                unitPayableTotal\n                sitelocationId\n            }\n        }\n    }\n`;\n\nexport const GET_SINGLE_LOCATION = gql`\n    query GetSingleLocation($id: Int!) {\n        sitelocationWithValueById(id: $id) {\n            complete\n            id\n            itemCount\n            itemsComplete\n            orderValue\n            orderheaderId\n            reference\n            valueApplied\n            valueComplete\n            worksheetReference\n            imageCount\n        }\n    }\n`;\n\nexport const GET_ORDER_LOCATIONS = gql`\n    query GetOrderLocations($id: Int!) {\n        sitelocationWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n            nodes {\n                complete\n                id\n                itemCount\n                itemsComplete\n                orderValue\n                orderheaderId\n                reference\n                valueApplied\n                valueComplete\n                worksheetReference\n                imageCount\n            }\n            totalCount\n        }\n    }\n`;\n\nexport const GET_ORDER_LOCATIONS_WITH_IMAGES = gql`\n    query GetOrderLocationsWithImages($id: Int!) {\n        sitelocationWithValues(\n            condition: { orderheaderId: $id }\n            filter: { imageCount: { greaterThan: \"0\" } }\n        ) {\n            nodes {\n                id\n                imageCount\n                reference\n                worksheetReference\n                orderValue\n                valueComplete\n                valueApplied\n                sitelocationById {\n                    imageDetails {\n                        nodes {\n                            sitelocationId\n                            dateTakenManual\n                            exifDate\n                            exifGps\n                            headerImageFile\n                            id\n                            longName\n                            shortName\n                        }\n                        groupedAggregates(groupBy: SHORT_NAME) {\n                            keys\n                            distinctCount {\n                                id\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n`","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');\n\nexports.default = _default;","/** @format */\n\nimport React from 'react';\nimport {gql, useQuery, useReactiveVar} from '@apollo/client';\nimport {gridSelectionsVar} from '../../cache';\nimport {Box, CircularProgress, Typography} from '@mui/material';\nimport {formatNumberNoDecimals} from '../../functions/commonFunctions';\n\nexport const GET_SINGLE_ORDERHEADER = gql`\n    query GetSingleOrderheader($id: Int!) {\n        orderheaderWithValue(id: $id) {\n            area\n            averageItemValue\n            averageLocationValue\n            id\n            itemCount\n            itemCountBoq\n            itemCountVarn\n            itemsComplete\n            itemsCompleteBoq\n            itemsCompleteVarn\n            locationCount\n            locationsComplete\n            statusDescription\n            orderNumber\n            orderValueLabour\n            orderValueMaterials\n            orderValueOther\n            orderValueTotal\n            orderValueTotalApplied\n            orderValueTotalBoq\n            orderValueTotalComplete\n            orderValueTotalVarn\n            projectTitle\n            workType\n            issuedDate\n            documentCount\n            imageCount\n        }\n    }\n`;\n\nfunction Item(props) {\n    const {sx, ...other} = props;\n    return (\n        <Box\n            border={1}\n            flexGrow={1}\n            bgcolor={'#b4cce4'}\n            m={0.5}\n            p={0.5}\n            textAlign={'center'}\n            borderRadius={3}\n            {...other}\n        />\n    );\n}\n\nconst OrderStats = () => {\n    const selectedOrder = useReactiveVar(gridSelectionsVar).selectedOrder;\n\n    const {data, loading} = useQuery(GET_SINGLE_ORDERHEADER, {\n        variables: {id: selectedOrder.id},\n    });\n\n    if (loading) {\n        return <CircularProgress/>;\n    }\n\n    return (\n        <Box\n            display={'flex'}\n            flexWrap={\"wrap\"}\n            justifyContent={'space-between'}\n            ml={0.5}\n            mr={0.5}\n        >\n            <Item>\n                <Typography fontWeight={'bold'}>PROJECT</Typography>\n                <Typography>\n                    {data.orderheaderWithValue.projectTitle.substring(0, 25) + '...'}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>ORDER NO</Typography>\n                <Typography>{data.orderheaderWithValue.orderNumber}</Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>STATUS</Typography>\n                <Typography>{data.orderheaderWithValue.statusDescription} </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>AREA</Typography>\n                <Typography>{data.orderheaderWithValue.area}</Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>LABOUR</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.orderValueLabour)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>MATERIALS</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueMaterials,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>OTHER</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.orderValueOther)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>TOTAL</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.orderValueTotal)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>COMPLETE</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueTotalComplete,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>TO DO</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueTotal -\n                        data.orderheaderWithValue.orderValueTotalComplete,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>APPLIED</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueTotalApplied,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>TO APPLY</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueTotalComplete -\n                        data.orderheaderWithValue.orderValueTotalApplied,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography>BOQ VAL</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.orderValueTotalBoq)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>VARN VAL</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(\n                        data.orderheaderWithValue.orderValueTotalVarn,\n                    )}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>LOCATIONS</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.locationCount)}\n                </Typography>\n            </Item>\n\n            <Item>\n                <Typography fontWeight={'bold'}>COMPLETE</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.locationsComplete)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>ITEMS</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.itemCount)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>COMPLETE</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.itemsComplete)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>DOCS</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.documentCount)}\n                </Typography>\n            </Item>\n            <Item>\n                <Typography fontWeight={'bold'}>IMAGES</Typography>\n                <Typography>\n                    {formatNumberNoDecimals(data.orderheaderWithValue.imageCount)}\n                </Typography>\n            </Item>\n        </Box>\n    );\n};\n\nexport default OrderStats;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}