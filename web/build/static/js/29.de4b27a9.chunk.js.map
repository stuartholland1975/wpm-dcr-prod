{"version":3,"sources":["components/order-admin/OrderImages.js","components/ui-components/image-viewer/ImageViewer.js"],"names":["GET_ORDER_IMAGES","gql","OrderImageData","history","useHistory","useQuery","variables","id","Number","location","state","fetchPolicy","data","loading","ImageViewer","props","images","imageDetails","nodes","map","item","original","headerImageFile","thumbnail","originalHeight","height","description","style","textAlign","worksheetReference","longName","exifDate","formatDate","dateTakenManual","marginTop","length","items","thumbnailPosition","onClick","event","window","open","target","currentSrc","replace","lazyLoad","showThumbnails","className"],"mappings":"kLAOMA,EAAmBC,YAAH,0bA8BPC,UAZQ,WACnB,IAAMC,EAAUC,cAChB,EAAwBC,YAASL,EAAkB,CAC/CM,UAAW,CAACC,GAAIC,OAAOL,EAAQM,SAASC,QAExCC,YAAa,sBAHVC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAKb,OAAIA,EACO,cAAC,IAAD,IAEJ,cAAC,IAAD,CAAaD,KAAMA,GAAQA,EAAMC,QAASA,M,iCCnCrD,2CAqDeC,IA/CK,SAACC,GAAW,IAAD,IACrBC,EAAM,UAAGD,EAAMH,YAAT,iBAAG,EAAYK,oBAAf,aAAG,EAA0BC,MAAMC,KAAI,SAACC,GAAD,MAAW,CAC1DC,SAAS,mBAAD,OAAqBD,EAAKE,gBAAgBf,IAClDgB,UAAU,sBAAD,OAAwBH,EAAKE,gBAAgBf,IAGtDiB,eAAgBT,EAAMU,OAASV,EAAMU,OAAS,IAG9CC,YACI,sBAAKC,MAAO,CAACC,UAAW,QAAxB,UACI,4CAAeR,EAAKS,sBACpB,4BAAIT,EAAKU,WACT,4BACKV,EAAKW,SACAC,YAAWZ,EAAKW,UAChBC,YAAWZ,EAAKa,0BAYtC,OACI,qBAAKN,MAAO,CAACO,UAAW,QAAxB,SACKlB,EAAOmB,OAAS,EACb,cAAC,IAAD,CACIC,MAAOpB,EAEPqB,kBAAkB,SAClBC,QAbS,SAACC,GAAD,OACrBC,OAAOC,KACHF,EAAMG,OAAOC,WAAWC,QAAQ,UAAW,YAC3C,WAWQC,UAAU,EACVC,gBAAgB,IAIpB,qBAAKC,UAAU,kBAAf","file":"static/js/29.de4b27a9.chunk.js","sourcesContent":["import React from 'react';\nimport {gql, useQuery} from '@apollo/client';\nimport {useHistory} from 'react-router-dom';\nimport {CircularProgress} from '@mui/material';\nimport ImageViewer from '../ui-components/image-viewer/ImageViewer';\n\n\nconst GET_ORDER_IMAGES = gql`\n    query GetOrderImages($id: Int!) {\n        imageDetails(filter: { orderheaderId: { equalTo: $id } }) {\n            totalCount\n            nodes {\n                headerImageFile\n                id\n                longName\n                shortName\n                reference\n                worksheetReference\n                dateTakenManual\n                exifDate\n            }\n        }\n    }\n`;\n\nconst OrderImageData = () => {\n    const history = useHistory();\n    const {data, loading} = useQuery(GET_ORDER_IMAGES, {\n        variables: {id: Number(history.location.state)},\n\n        fetchPolicy: 'cache-and-network',\n    });\n    if (loading) {\n        return <CircularProgress/>;\n    }\n    return <ImageViewer data={data && data} loading={loading}/>;\n};\nexport default OrderImageData;\n","/** @format */\n\nimport React from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport {formatDate} from '../../../functions/commonFunctions';\n\nconst ImageViewer = (props) => {\n    const images = props.data?.imageDetails?.nodes.map((item) => ({\n        original: `/images/resized/${item.headerImageFile.id}`,\n        thumbnail: `/images/thumbnails/${item.headerImageFile.id}`,\n        // original: `http://localhost:9433/images/resized/${item.headerImageFile.id}`,\n        // thumbnail: `http://localhost:9433/images/thumbnails/${item.headerImageFile.id}`,\n        originalHeight: props.height ? props.height : 800,\n        //  originalTitle: item.worksheetReference,\n        //  thumbnailTitle: item.reference,\n        description: (\n            <div style={{textAlign: 'left'}}>\n                <p>WORKSHEET: {item.worksheetReference}</p>\n                <p>{item.longName}</p>\n                <p>\n                    {item.exifDate\n                        ? formatDate(item.exifDate)\n                        : formatDate(item.dateTakenManual)}\n                </p>\n            </div>\n        ),\n    }));\n\n    const handleImageClick = (event) =>\n        window.open(\n            event.target.currentSrc.replace('resized', 'original'),\n            '_blank',\n        );\n\n    return (\n        <div style={{marginTop: '50px'}}>\n            {images.length > 0 ? (\n                <ImageGallery\n                    items={images}\n                    // slideInterval={4000}\n                    thumbnailPosition='bottom'\n                    onClick={handleImageClick}\n                    lazyLoad={true}\n                    showThumbnails={true}\n                    //  autoPlay={true}\n                />\n            ) : (\n                <div className='no-data-message'>NO IMAGES ARE AVAILABLE</div>\n            )}\n        </div>\n    );\n};\n\nexport default ImageViewer;\n"],"sourceRoot":""}